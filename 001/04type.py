# 第一种数据类型：字符串（str）
# 表示文本内容，用引号包裹，可以用 len() 函数求其长度
len("r u ok?")
len('高中生哪有不疯的，硬撑罢了！')
# hmmm... 是的，还是需要 print 一下才能真正输出
print(len("r u ok?"))
print(len('高中生哪有不疯的，硬撑罢了！'))
# 你可能注意到了，空格和标点也是占据一个长度的，但是特殊的，例如转义符，不会占据长度
# 例如下方这个例子，转义符 ”\“ 不占据长度，空格占据长度，”n“ 也占据一个长度，也就是说，一个完整的转义符只算一个长度
print(len("你 \n说 \n话 \n带 \n空 \n格"))

print("=========")
i_text = "I do."  # 定义一串字符串先

# 你也可以提取字符串某一位置的单个字符，在字符串后跟个方括号，里面放上一个数字，名曰 ”索引“，这是就可以提取该索引位置上的字符
# 索引也就是排排坐，从第一个字符数起，是 0、1、2、3、4、5、6...
print("这串字符串的长度为："+str(len(i_text)))  # 这里 str() 函数将数据类型为整数类型的数据转换为字符串以供输出
print(i_text[0])  # 索引为 0，输出 I
print(i_text[1])  # 索引为 1，输出空格
print(i_text[2])  # 索引为 2，输出 d
print(i_text[3])  # 索引为 3，输出 o
print(i_text[4])  # 索引为 4，输出句号

print("=========")

# 第二、三种数据类型：整数类型（int）与浮点数类型（float）
# 可以看看前面有关计算器的文件，不多说啦

# 第四种类型：布尔类型（bool）
# 只包含俩值：True 真，False 假（记得大写）

# 第五种类型：空值类型（NoneType）
# 只包含一个值：None
# 注意：不是 o！不是空字符串！不是 False！只是代表全然妹有！举个栗子：
your_girlfriend = None
# 是不是瞬间懂了

# 如果你不确定一个数据的数据类型，可以试一试 type() 函数。比如我们刚刚说的 len() 函数输出的类型：
# 如果你直接用 print("这串字符串的长度为："+len("I do."))，会出现报错 “can only concatenate str (not "int") to str”
# 这是因为 len() 输出的数据是整型，你却让人家跟在字符串的屁股后面，他俩不熟，自然就没办法正常合作了……
# 你可以试着去掉井号来运行一下，看看是不是这样：

# print("这串字符串的长度为："+len("I do."))

# 此时如果我们使用 type() 函数，就可以很舒服地知道 len() 输出的类型了：
type(len("1145141919810"))
# print 出来
print(type(len("1145141919810")))  # <class 'int'>
# 同理……
print(type(3.14159265897932))  # <class 'float'>
print(type("你知道回字有四种写法吗"))  # <class 'str'>
print(type(True))  # <class 'bool'>
print(type(None))  # <class 'NoneType'>